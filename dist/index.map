{"version":3,"sources":["0","_modules/toRainglowUrl.js","_modules/toBase16Url.js","_modules/requestThemeJson.js","_modules/toRawUrl.js","_modules/rabbitHole.js","index.js"],"names":["module","exports","base16","rainglow","others","nebula","plastic","horizon","toRainglowUrl","tag","toBase16Url","schema","name","requestThemeJson","url","fallbackName","response","content","JSON","parse","Error","error","console","log","rawHead","toRawUrl","s","a","b","LOCATION","process","cwd","NIKETA","rabbitHole","rainglowList","packageJsonData","data","x","Object","entries","map","uiTheme","type","label","newData","filePath","spaces","path","packageJson","themes","getNiketaData","newPackageJson","contributes"],"mappings":"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","file":"index.map","sourceRoot":"../src","sourcesContent":[null,"import { glue } from 'rambdax'\n\nexport function toRainglowUrl(tag){\n  return glue(`\n    https://raw.githubusercontent.com\n    rainglow\n    vscode\n    master\n    themes\n    ${tag}.json\n  `,'/')\n}\n\n","import { glue } from 'rambdax'\n\nexport function toBase16Url(tag){\n  return glue(`\n    https://raw.githubusercontent.com\n    riesinger\n    base16-vscode\n    master\n    themes\n    ${tag}.json\n  `,'/')\n}\n\n","import { pass } from 'rambdax'\nimport request from 'request-promise'\n\nexport const schema = {name:'string'}\n\nexport async function requestThemeJson(url, fallbackName){\n    try {\n        const response = await request(url)\n        const content = JSON.parse(response)\n        \n        if(!pass(content)(schema) && !fallbackName){\n            throw new Error('no name')\n        }\n\n        if(!pass(content)(schema) && fallbackName){\n            content.name = fallbackName\n        }\n\n        return content\n    } catch (error) {\n        console.log(error, url);\n        \n        return false\n    }\n}\n","import { remove, prepend, s, split, join } from 'rambdax'\n\nconst rawHead = 'https://raw.githubusercontent.com/'\n\nexport function toRawUrl(url){\n  s()\n\n  return url\n    .s(split('/blob/'))\n    .s( ([a,b]) => ([\n        remove('https://github.com/', a),\n        b\n    ]))\n    .s(join('/'))\n    .s(prepend(rawHead))\n}\n","import {rainglow, others, base16} from '../data.json'\nimport { mapAsync, change } from 'rambdax'\nimport {toRainglowUrl} from './toRainglowUrl'\nimport {toBase16Url} from './toBase16Url'\nimport {requestThemeJson} from './requestThemeJson'\nimport {toRawUrl} from './toRawUrl'\nimport {pascalCase, dotCase, camelCase} from 'string-fn'\nimport { writeJsonSync, readJsonSync } from 'fs-extra'\n\nconst LOCATION = `${process.cwd()}/package.json`\nconst NIKETA = 'Niketa'\n\nexport async function rabbitHole (){\n  const rainglowList = await mapAsync(\n    async x=> {\n      const data = await requestThemeJson(\n        toRainglowUrl(x)\n      )\n      \n      return {\n        data,\n        name: dotCase(x),\n      }\n    }\n  )(rainglow)\n  \n  const base16List = await mapAsync(\n    async x=> {\n      const data = await requestThemeJson(\n        toBase16Url(x)\n      )\n      \n      return {\n        data,\n        name: dotCase(x),\n      }\n    }\n  )(base16)\n\n  const othersList = await mapAsync(\n    async ([name, url]) => {\n      const data = await requestThemeJson(\n        toRawUrl(url),\n        name\n      )\n\n      return {\n        data,\n        name: dotCase(name)\n      }\n    }\n  )(Object.entries(others))\n\n  \n  const list = [...rainglowList, ...base16List, ...othersList]\n  \n  const packageJsonData = list.map(x => {\n    const uiTheme = x.data.type === 'light' ?\n      'vs' :\n      'vs-dark'\n\n    const label = pascalCase(`${NIKETA}.${x.name}`)\n\n    const newData = {\n      ...x.data,\n      name: label\n    }\n    const fileName = camelCase(x.name)\n    const filePath = `./imported/${fileName}.json`\n    writeJsonSync(\n      filePath, \n      newData, \n      {spaces: 2}\n    )\n    return {\n      label,\n      uiTheme,\n      path: filePath \n    }\n  })\n\n  const packageJson = readJsonSync(LOCATION)\n\n  const themes = [\n    ...getNiketaData(),\n    ...packageJsonData\n  ]\n\n  const newPackageJson = change(\n    packageJson,\n    'contributes', \n    {themes}\n  )\n\n  writeJsonSync(\n    LOCATION,\n    newPackageJson,\n    {spaces: 2}\n  )\n\n  return newPackageJson.contributes.themes\n}\n\nfunction getNiketaData(){\n  return [\n    {\n      \"label\": \"NiketaLight\",\n      \"uiTheme\": \"vs\",\n      \"path\": \"./themes/niketa-light.json\"\n    },\n    {\n      \"label\": \"NiketaYellow\",\n      \"uiTheme\": \"vs\",\n      \"path\": \"./themes/niketa-yellow.json\"\n    },\n    {\n      \"label\": \"NiketaDark\",\n      \"uiTheme\": \"vs-dark\",\n      \"path\": \"./themes/niketa-dark.json\"\n    }\n  ]\n}","import { rabbitHole } from './_modules/rabbitHole'\n\nrabbitHole()\n"]}