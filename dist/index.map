{"version":3,"sources":["0","_modules/toRainglowUrl.js","_modules/toBase16Url.js","_modules/toBase2Url.js","_modules/requestThemeJson.js","_modules/toRawUrl.js","_modules/rabbitHole.js","index.js"],"names":["module","exports","base2","base16","rainglow","others","nebula","plastic","horizon","toRainglowUrl","tag","toBase16Url","toBase2Url","schema","name","requestThemeJson","url","fallbackName","response","content","JSON","parse","Error","error","console","log","rawHead","toRawUrl","s","a","b","LOCATION","process","cwd","NIKETA","rabbitHole","rainglowList","data","x","base16List","packageJsonData","Object","entries","map","uiTheme","type","label","newData","filePath","spaces","path","packageJson","themes","getNiketaData","newPackageJson","contributes"],"mappings":"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","file":"index.map","sourceRoot":"../src","sourcesContent":[null,"import { glue } from 'rambdax'\n\nexport function toRainglowUrl(tag){\n  return glue(`\n    https://raw.githubusercontent.com\n    rainglow\n    vscode\n    master\n    themes\n    ${tag}.json\n  `,'/')\n}\n\n","import { glue } from 'rambdax'\n\nexport function toBase16Url(tag){\n  return glue(`\n    https://raw.githubusercontent.com\n    riesinger\n    base16-vscode\n    master\n    themes\n    ${tag}.json\n  `,'/')\n}\n\n","import { glue } from 'rambdax'\nimport { pascalCase } from 'string-fn'\n\nexport function toBase2Url(tag) {\n  return glue(\n    `\n    https://raw.githubusercontent.com\n    atelierbram\n    Base2Tone-VSCode-Themes\n    master\n    themes\n    Base2Tone_${ pascalCase(tag) }-color-theme.json\n  `,\n    '/'\n  )\n}\n","import { pass } from 'rambdax'\nimport request from 'request-promise'\n\nexport const schema = {name:'string'}\n\nexport async function requestThemeJson(url, fallbackName){\n    try {\n        const response = await request(url)\n        const content = JSON.parse(response)\n        \n        if(!pass(content)(schema) && !fallbackName){\n            throw new Error('no name')\n        }\n\n        if(!pass(content)(schema) && fallbackName){\n            content.name = fallbackName\n        }\n\n        return content\n    } catch (error) {\n        console.log(error, url);\n        \n        return false\n    }\n}\n","import { remove, prepend, s, split, join } from 'rambdax'\n\nconst rawHead = 'https://raw.githubusercontent.com/'\n\nexport function toRawUrl(url){\n  s()\n\n  return url\n    .s(split('/blob/'))\n    .s( ([a,b]) => ([\n        remove('https://github.com/', a),\n        b\n    ]))\n    .s(join('/'))\n    .s(prepend(rawHead))\n}\n","import { rainglow, others, base16, base2 } from '../data.json'\nimport { mapAsync, change } from 'rambdax'\nimport { toRainglowUrl } from './toRainglowUrl'\nimport { toBase16Url } from './toBase16Url'\nimport { toBase2Url } from './toBase2Url'\nimport { requestThemeJson } from './requestThemeJson'\nimport { toRawUrl } from './toRawUrl'\nimport { pascalCase, dotCase, camelCase } from 'string-fn'\nimport { writeJsonSync, readJsonSync } from 'fs-extra'\n\nconst LOCATION = `${ process.cwd() }/package.json`\nconst NIKETA = 'Niketa'\n\nexport async function rabbitHole() {\n  const rainglowList = await mapAsync(async x => {\n    const data = await requestThemeJson(toRainglowUrl(x))\n\n    return {\n      data,\n      name : dotCase(x),\n    }\n  })(rainglow)\n\n  const base16List = await mapAsync(async x => {\n    const data = await requestThemeJson(toBase16Url(x))\n\n    return {\n      data,\n      name : dotCase(x),\n    }\n  })(base16)\n\n  const base2List = await mapAsync(async x => {\n    const data = await requestThemeJson(toBase2Url(x))\n\n    return {\n      data,\n      name : dotCase(x),\n    }\n  })(base2)\n\n  const othersList = await mapAsync(async ([ name, url ]) => {\n    const data = await requestThemeJson(toRawUrl(url), name)\n\n    return {\n      data,\n      name : dotCase(name),\n    }\n  })(Object.entries(others))\n\n  const list = [\n    ...rainglowList,\n    ...base2List,\n    ...base16List,\n    ...othersList,\n  ]\n\n  const packageJsonData = list.map(x => {\n    const uiTheme = x.data.type === 'light' ? 'vs' : 'vs-dark'\n\n    const label = pascalCase(`${ NIKETA }.${ x.name }`)\n\n    const newData = {\n      ...x.data,\n      name : label,\n    }\n    const fileName = camelCase(x.name)\n    const filePath = `./imported/${ fileName }.json`\n    writeJsonSync(filePath, newData, { spaces : 2 })\n\n    return {\n      label,\n      uiTheme,\n      path : filePath,\n    }\n  })\n\n  const packageJson = readJsonSync(LOCATION)\n\n  const themes = [ ...getNiketaData(), ...packageJsonData ]\n\n  const newPackageJson = change(packageJson, 'contributes', { themes })\n\n  writeJsonSync(LOCATION, newPackageJson, { spaces : 2 })\n\n  return newPackageJson.contributes.themes\n}\n\nfunction getNiketaData() {\n  return [\n    {\n      label   : 'NiketaLight',\n      uiTheme : 'vs',\n      path    : './themes/niketa-light.json',\n    },\n    {\n      label   : 'NiketaYellow',\n      uiTheme : 'vs',\n      path    : './themes/niketa-yellow.json',\n    },\n    {\n      label   : 'NiketaDark',\n      uiTheme : 'vs-dark',\n      path    : './themes/niketa-dark.json',\n    },\n  ]\n}\n","import { rabbitHole } from './_modules/rabbitHole'\n\nrabbitHole()\n"]}